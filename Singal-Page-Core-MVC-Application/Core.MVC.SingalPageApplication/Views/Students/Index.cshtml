@model PaginatedList<Core.MVC.SingalPageApplication.Models.Student>

@{
    Layout = null;
}

<h4>Manage Students</h4>
<hr />

<form asp-action="Index" method="get">
    <div id="searchBox" class="form-actions no-color">
        <p>
        Find by name: <input type="text" id="SearchString" name="SearchString" value="@ViewData["CurrentFilter"]" />
            
        <input type="submit" value="Search" class="btn btn-outline-info" /> |
            <a asp-action="Index" data-modal-home="" tragetid="data_modal_home">Back to Full List</a>
        </p>
    </div>
</form>
<script>
    function SearchText(evant)
    {
        let searchstring = $(this).closest('#searchBox').find('#SearchString').val();
    }
</script>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" data-modal-home="" tragetid="data_modal_home">Last Name</a>
            </th>
            <th>
                First Name
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" data-modal-home="" tragetid="data_modal_home">Enrollment Date</a>
            </th>
            <th>
                <a asp-action="Create" data-modal="">Create New</a>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstMidName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EnrollmentDate)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled" data-modal-home="" tragetid="data_modal_home">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled" data-modal-home="" tragetid="data_modal_home">
    Next
</a>